= まとめと次のステップ

: author
   結城洋志
: institution
   株式会社クリアコード
: content-source
   リーダブルコード演習
: date
   2022-08-05
: allotted-time
   20m
: theme
   clear-code

= おさらい

  * 講座の目的？
  * リーダブルコードの必要性？
  * 講座でやったこと？


= 講座の目的

  * ((*リーダブルコード*))を\n
    ((*日常的に書く*))上での\n
    ((*基礎となる考え方*))\n
    を実践し、持ち帰る

= リーダブルコードの必要性

  * 既存のコードを読んで\n
    ((*素早く内容を把握する*))ため
  * 既存のコードに\n
    ((*手を加える・続きを書く*))ときの\n
    効率を落とさないため

= 変更コストと開発速度

  # image
  # src = images/readable-code-reasonability.svg
  # relative_width = 90

== プロパティー

: enable-title-on-image
   false

= 講座でやったこと

  * コードを読む文化作りの体験
    * チームの中でコードを\n
      読みあってみる
    * チーム内でリーダブルコードの\n
      基準を共有する
    * 他のチームともリーダブルコードの\n
      基準を共有する

= 次のステップ

  * もっともっとコードを読もう！

= 次のステップの例1

  * ゼミの他の人や\n
    同じ学部の人が書いたコードを\n
    読んでみよう
    * 研究の合間に
    * 論文執筆の合間に

= 次のステップの例2

  * 使うライブラリやツールの\n
    コードを読んでみよう
    * OSSのコードは\n
      リーダブルであることが多い
    * 「こういう結果を得るには\n
      　こう書くんだ！」と\n
      実感を伴って読める

= 次のステップの例3

  * コミット単位で読んでみよう
    * コード全体ではなく差分を読む
    * コードの中身・設計の仕方ではなく\n
      コードの書き方・開発の仕方に注目する
    * リーダブルなコードを\n
      見つけるのに使いやすい

= コードを読む文化を後輩につなごう

  * ゼミの後輩にも「コードを読む\n
    文化」に馴染んでもらおう
    * 皆さんが書いたコードが\n
      ((*資産として受け継がれる*))
    * ((*口頭での詳しい説明なし*))でも\n
      コードを読んで伝わる情報が増える\n
      (('note:後輩に手取り足取り教えずに済む→先輩も楽になる'))

= 新しい人との関わりが、リーダブルの基準の見直し機会になる

(('tag:center'))
これまで大事にしてきたことを\n
後輩と共有\n
↓

  * 「もっとこっちの方が\n
    　リーダブルでは？」
    * リーダブル基準の見直しのよい機会

= サポート

  * 今日の資料はすべて再利用可能\n
    (('note:https://github.com/clear-code/readable-code-workshop/tree/master/20210913'))\n
    (('note:（ https://slide.rabbit-shocker.org/authors/Piro/ ）'))
    * 迷ったら読み返せる

= クリアコード

  * クリアなコードが大切
    * クリア == clear == 意図が明確
    * クリアなコードはリーダブルコード

(('tag:center'))
みなさんのコーディングライフで\n
リーダブルコードが当たり前に\n
なることを応援します！


= 課題（宿題）

  * 過去作成した何らかの\n
    プログラムについて
    * ((*リーダブルになるよう編集*))する
    * リーダブルにした点を\n
      1つ以上((*メモに書き出す*))
    * 以下の3つを併せて提出する
      * ((*変更前*))のプログラム
      * ((*変更後*))のプログラム
      * リーダブルにした点の((*メモ*))

