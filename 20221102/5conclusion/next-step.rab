= まとめと次のステップ

: author
   結城洋志
: institution
   株式会社クリアコード
: content-source
   実践リーダブルコード
: date
   2022-11-02
: allotted-time
   20m
: theme
   clear-code

= おさらい

  * 講座の目的？
  * リーダブルコードの必要性？
  * 講座でやったこと？


= 講座の目的

  * 自分の開発チームに
  * ((*リーダブルなコードが\n
    当たり前な文化の作り方*))を
  * 持ち帰る

= リーダブルコードの必要性

  * 既存のコードを読んで\n
    ((*素早く内容を把握する*))ため
  * 既存のコードに\n
    ((*手を加える・続きを書く*))ときの\n
    効率を落とさないため

= 変更コストと開発速度

  # image
  # src = images/readable-code-reasonability.svg
  # relative_width = 90

== プロパティー

: enable-title-on-image
   false

= 文化の作り方の流れ（1）

  * まず自分が\n
    ((*コードを読む人*))になる
    * よいコードを共有し、\n
      リーダブルコードの基準を作る
    * 「読む人」が\n
      読みやすいなら\n
      リーダブル

= 文化の作り方の流れ（2）

  * ((*コードを読みあうチーム*))になる
  * 基準の育て方
    * 各メンバーがコードを読む
    * リーダブルだと思ったコードを共有
    * チームとしてリーダブルかを判断
    * →チームの基準に加わる

= 基準の育て方

  * コードを読む文化を作る
    * まず自分が読み始める
    * リーダブルなコードを探す
    * 見つけたリーダブルなコードを\n
      他のメンバーに伝える
    * →コードが読まれるという自覚が\n
      チームに浸透

(('tag:center'))
(('note:今日やったのはここまで'))


= 基準の育て方の例1

(('tag:center'))
(('note:次のステップ'))

  * コミット単位で読む
    * コード全体ではなく差分を読む
    * コードの中身・設計の仕方ではなく\n
      コードの書き方・開発の仕方に注目する
    * リーダブルなコードを\n
      見つけるのに使いやすい

= 基準の育て方の例2

  * コミットの読み方
    * pull型よりpush型がおすすめ\n
      (('note:（ https://www.clear-code.com/blog/2015/3/27.html ）'))
      * 読むコストが下がる
      * 流し読む（負担が多いと続かない）
    * 問題探し視点では読まない\n
      (('note:（必要ならコードレビューを実施）'))

= 基準の育て方の例3

  * リーダブルコードの共有方法
    * Wikiに書く（全チームで有効）
    * コードで伝える（上級チーム向け）

= 基準の育て方の例4

  * Wikiに書いて共有する
    * Wikiもdiffを通知できるようにする\n
      (('note:（RedmineとGitHub用はツールあり）'))
    * 後で参照できるため
    * 更新もできるため\n
      (('note:（リーダブルコードの基準は変わることもある！）'))

= 基準の育て方の例5

  * 実際のコードで共有する
    * 上級チーム向け\n
      (('note:（チームにコードを読む文化が根付いた後）'))
    * リーダブルコードを真似てコミット
    * →他の人：「またこの書き方だ」
    * →真似する人増加→チームが合意
    * →チームが合意→Wikiにまとめる

= コードを読む文化

  * 新人にも真っ先に\n
    その文化に馴染んでもらう
    * 新人のスムーズな受け入れに有用
    * 人の入れ替えがチームのリーダブル基準の見直しの機会になる

= 新人のスムーズな受け入れに有用

(('tag:center'))
開発を通じて↓を共有できる\n
(('note:（ただし、上級チームになってから）'))

  * チームが大事にしていること
    * チームのリーダブル基準
    * チームの開発スタイル

= 新人のスムーズな受け入れに有用

(('tag:center'))
チームが大事にしていることが\n
開発を通じて共有される\n
↓

  * 新人に手取り足取り教えずに済む
    * 開発速度低下を抑えられる

= リーダブル基準の見直しの機会に

(('tag:center'))
チームが大事にしていることが\n
開発を通じて共有される\n
↓

  * 「もっとこっちの方が\n
    リーダブルでは？」
    * チームのリーダブル基準の\n
      見直しのよい機会


= これからやること

  * この講座をチームでもやる
    * 資料はすべて再利用可能
  * 自分がコードを読み始める
    * 自分が変更するコードの周辺から\n
      リーダブルコードを探す
    * 見つけたリーダブルなコードを\n
      他のメンバーに伝える


= 読みにくいコードに打ち克つ！

  * × 読むコストが\n
    　　もったいないから\n
    　　読むのをやめる
  * × 読みにくいと指摘する
  * ○ 読みやすくなるように\n
    　　コードをリーダブルにする


= サポート

  * 今日の資料はすべて再利用可能\n
    (('note:https://github.com/clear-code/readable-code-workshop/tree/master/20220804'))\n
    (('note:（ https://slide.rabbit-shocker.org/authors/Piro/ ）'))
    * 迷ったら読み返せる

= クリアコード

  * クリアなコードが大切
    * クリア == clear == 意図が明確
    * クリアなコードはリーダブルコード

(('tag:center'))
みなさんのコーディングライフで\n
リーダブルコードが当たり前に\n
なることを応援します！
